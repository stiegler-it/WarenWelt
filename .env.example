# WarenWelt Docker Compose Environment Variables

# --- Backend API (FastAPI) ---
# Used by docker-compose.yml to set environment for the 'api' service.
# These will override any defaults set in the Dockerfile or app config if specified here.

# Secret key for JWT token generation.
# IMPORTANT: Generate a strong, random key for production!
# Example: openssl rand -hex 32
SECRET_KEY="<GENERATE_A_STRONG_SECRET_KEY_HERE>"

# Database URL.
# For SQLite using the volume defined in docker-compose.yml:
DATABASE_URL="sqlite:///data/test.db"
# For PostgreSQL (if you switch to a db service in docker-compose.yml):
# BACKEND_DATABASE_URL="postgresql://warenwelt_user:yoursecurepassword@db:5432/warenwelt_db"

# Uvicorn settings (optional, defaults are usually fine)
# UVICORN_HOST="0.0.0.0" # Already set in Dockerfile/entrypoint
# UVICORN_PORT="8000"   # Already set in Dockerfile/entrypoint

# --- Frontend (Vue.js / Nginx) ---
# Used by docker-compose.yml as a build argument for the 'web' service.
# This URL tells the frontend where to find the backend API.
# It should point to the 'api' service name and port within the Docker network.
VITE_FRONTEND_API_BASE_URL="http://api:8000/api/v1"

# --- PostgreSQL Database Service (if used instead of SQLite) ---
# These are used if you uncomment and configure a 'db' service in docker-compose.yml.
# POSTGRES_USER="warenwelt_user"
# POSTGRES_PASSWORD="yoursecurepassword"
# POSTGRES_DB="warenwelt_db"

# --- General Docker Compose Settings ---
# COMPOSE_PROJECT_NAME="warenwelt" # Optional: Sets a custom project name for containers/networks
# COMPOSE_FILE="docker-compose.yml" # Optional: Specify docker-compose file(s)

# --- Timezone (optional, set for all services if needed) ---
# TZ="Europe/Berlin"
